services:
  mooclet-postgres-local:
    image: postgres:alpine
    restart: always
    env_file:
      - ./docker_local.env
    environment:
      - POSTGRES_USER=${DB_USER:-moocletdb}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-mooclet}
      - POSTGRES_DB=${DB_NAME:-mooclet}
    networks:
      - moocletservice
    ports:
      - "5432:5432"
    volumes:
      - moocletdata:/var/lib/postgresql/data
      - ./docker_local.docker_setup_sql.sh:/docker-entrypoint-initdb.d/docker_local.docker_setup_sql.sh

  mooclet-api-local:
    container_name: mooclet-api-local
    build:
      context: .
      dockerfile: ./docker_local.Dockerfile
    image: mooclet-api-local:latest
    pull_policy: never
    env_file:
      - ./docker_local.env
    volumes:
      - moocletdata:/usr/mooclet_engine
    networks:
      - moocletservice
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py loaddata policy &&
             python manage.py createsuperuser --noinput --username=${DJANGO_SUPERUSER_USERNAME:-mooclet} --email=${DJANGO_SUPERUSER_EMAIL:-admin@mooclet.org} || true &&
             echo \"from django.contrib.auth import get_user_model; User = get_user_model(); user = User.objects.get(username='${DJANGO_SUPERUSER_USERNAME:-mooclet}'); user.set_password('${DJANGO_SUPERUSER_PASSWORD:-mooclet}'); user.save()\" | python manage.py shell &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - mooclet-postgres-local

volumes:
  moocletdata:

networks:
  moocletservice:
    driver: "bridge"